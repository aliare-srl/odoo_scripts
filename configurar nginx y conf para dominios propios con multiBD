Gracias por pasarme tu configuraci√≥n, Mauricio. Te voy a indicar **exactamente d√≥nde y c√≥mo modificar tu Nginx** para que `petsfood.com.ar` funcione con su propio dominio sin romper los subdominios actuales (`demo.mochipa.com.ar`, `motel.mochipa.com.ar`, etc.).

---

### üîπ Paso 1: Crear un nuevo `server` block para el dominio propio

Actualmente ten√©s un `server` block principal que maneja varios subdominios de `mochipa.com.ar`. Lo que hay que hacer es **agregar un bloque separado para `petsfood.com.ar`**, as√≠:


server {
    listen 80;
    server_name petsfood.com.ar www.petsfood.com.ar;

    location / {
        proxy_pass http://127.0.0.1:8073;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    location /longpolling {
        proxy_pass http://127.0.0.1:8075;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    client_max_body_size 100M;

    access_log /var/log/nginx/petsfood.access.log;
    error_log /var/log/nginx/petsfood.error.log warn;
}


### üîπ Paso 2: Configurar el dbfilter en Odoo

* Abr√≠ tu `odoo.conf`.
* Actualmente ten√©s algo como:

```ini
dbfilter = ^%d$ ASI ANDA BIEN si el dominio tiene el mismo nombre de la BD
```

* Modific√° para que tambi√©n detecte `petsfood` por su dominio:

```ini
dbfilter = ^(petsfood|.*\.mochipa)$
```

* Explicaci√≥n:

  * `petsfood` ‚Üí base de datos de Petsfood (debe llamarse exactamente `petsfood`).
  * `.*\.mochipa` ‚Üí todos los subdominios existentes de tus otros clientes siguen funcionando.

* Reinici√° Odoo despu√©s de cambiar:

```bash
sudo systemctl restart odoo
```

---

### üîπ Paso 3: Configurar SSL con Certbot

Si quer√©s que `petsfood.com.ar` tenga HTTPS:

```bash
sudo certbot --nginx -d petsfood.com.ar -d www.petsfood.com.ar
```

Esto genera los certificados y actualiza el `server block` autom√°ticamente (despu√©s ajust√° los logs si quer√©s diferenciarlos).

---

### üîπ Paso 4: Reiniciar Nginx

```bash
sudo nginx -t   # Verifica sintaxis
sudo systemctl restart nginx
```

---

Con esto:

* Todos los subdominios de `mochipa.com.ar` siguen funcionando igual.
* `petsfood.com.ar` apunta a la base `petsfood`.
* Cada cliente puede ingresar con su dominio/subdominio sin conflictos.

